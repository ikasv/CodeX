<?php
/**
 * Functions and definitions
 */
function custom_widgets_init() {

	$shared_args = array(
		'before_title'  => '<h4 class="widget-title">',
		'after_title'   => '</h4>',
		'before_widget' => '<div id="%1$s" class="customwidget widget-content %2$s">',
		'after_widget'  => '</div>',
	);

	// Footer #1.
	register_sidebar(
		array_merge(
			$shared_args,
			array(
				'name'        => __( 'Footer #1', 'customtheme' ),
				'id'          => 'sidebar-1',
				'description'   => esc_html__( 'Add widgets here to appear in your footer.', 'customtheme' ),
			)
		)
	);

	// Footer #2.
	register_sidebar(
		array_merge(
			$shared_args,
			array(
				'name'        => __( 'Footer #2', 'customtheme' ),
				'id'          => 'sidebar-2',
				'description'   => esc_html__( 'Add widgets here to appear in your footer.', 'customtheme' ),
			)
		)
	);
	// Footer #3.
	register_sidebar(
		array_merge(
			$shared_args,
			array(
				'name'        => __( 'Footer #3', 'customtheme' ),
				'id'          => 'sidebar-3',
				'description'   => esc_html__( 'Add widgets here to appear in your footer.', 'customtheme' ),
			)
		)
	);
	// Footer #4.
	register_sidebar(
		array_merge(
			$shared_args,
			array(
				'name'        => __( 'Footer #4', 'customtheme' ),
				'id'          => 'sidebar-4',
				'description'   => esc_html__( 'Add widgets here to appear in your footer.', 'customtheme' ),
			)
		)
	);
	// Footer #5.
	register_sidebar(
		array_merge(
			$shared_args,
			array(
				'name'        => __( 'Footer #5', 'customtheme' ),
				'id'          => 'sidebar-5',
				'description'   => esc_html__( 'Add widgets here to appear in your footer.', 'customtheme' ),
			)
		)
	);	

}
add_action( 'widgets_init', 'custom_widgets_init' );


/**
 * Enqueue scripts and styles.
 */
function custom_scripts() {
	wp_enqueue_style( 'customtheme-style', get_template_directory_uri() . '/style.css', array(), wp_get_theme()->get( 'Version' ) );


	wp_register_script('twenty-twenty-one-ie11-polyfills-asset',
		get_template_directory_uri() . '/assets/js/polyfills.js',
		array(),
		wp_get_theme()->get( 'Version' ),
		true
	);

	wp_enqueue_script("jquery");
}
add_action( 'wp_enqueue_scripts', 'custom_scripts' );

function custom_theme_setup() {
	add_theme_support( 'automatic-feed-links' );

	add_theme_support( 'title-tag' );

	
	register_nav_menus(
			array(
				'primary'     => esc_html__( 'Primary Menu', 'customtheme' ),
				'footer'      => __( 'Secondary Menu', 'customtheme' ),
        'mobilemenu'  => __( 'Mobile Menu', 'customtheme' ),
			)
		);


	add_theme_support(
			'custom-logo',
			array(
				// 'height'               => $logo_height,
				// 'width'                => $logo_width,
				'flex-width'           => true,
				'flex-height'          => true,
				'unlink-homepage-logo' => true,
			)
		);	
}
add_action( 'after_setup_theme', 'custom_theme_setup' );


add_action( 'init', 'create_category_insights_hierarchical_taxonomy', 0 );
 
//create a custom taxonomy name it category insights for your posts
 
function create_category_insights_hierarchical_taxonomy() {
 
  $labels = array(
    'name' => _x( 'Category Insights', 'taxonomy general name' ),
    'singular_name' => _x( 'Category Insights', 'taxonomy singular name' ),
    'search_items' =>  __( 'Search Category Insights' ),
    'all_items' => __( 'All Category Insights' ),
    'parent_item' => __( 'Parent Category Insights' ),
    'parent_item_colon' => __( 'Parent Category Insights:' ),
    'edit_item' => __( 'Edit Category Insights' ), 
    'update_item' => __( 'Update Category Insights' ),
    'add_new_item' => __( 'Add New Category Insights' ),
    'new_item_name' => __( 'New Subject Name' ),
    'menu_name' => __( 'Category Insights' ),
  );    
 
// Now register the taxonomy
  register_taxonomy('category_insights',array('category_insights'), array(
    'hierarchical' => true,
    'labels' => $labels,
    'show_ui' => true,
    'show_in_rest' => true,
    'show_admin_column' => true,
    'query_var' => true,
    'rewrite' => array( 'slug' => 'category_insights' ),
  ));
}


function custom_post_type_insights() {
 
// Set UI labels for Custom Post Type
    $labels = array(
        'name'                => _x( 'Insights', 'Post Type General Name', 'customtheme' ),
        'singular_name'       => _x( 'Insight', 'Post Type Singular Name', 'customtheme' ),
        'menu_name'           => __( 'Insights', 'customtheme' ),
        'parent_item_colon'   => __( 'Parent Insight', 'customtheme' ),
        'all_items'           => __( 'All Insights', 'customtheme' ),
        'view_item'           => __( 'View Insight', 'customtheme' ),
        'add_new_item'        => __( 'Add New Insight', 'customtheme' ),
        'add_new'             => __( 'Add New', 'customtheme' ),
        'edit_item'           => __( 'Edit Insight', 'customtheme' ),
        'update_item'         => __( 'Update Insight', 'customtheme' ),
        'search_items'        => __( 'Search Insight', 'customtheme' ),
        'not_found'           => __( 'Not Found', 'customtheme' ),
        'not_found_in_trash'  => __( 'Not found in Trash', 'customtheme' ),
    );
     
// Set other options for Custom Post Type
     
    $args = array(
        'label'               => __( 'insights', 'customtheme' ),
        'description'         => __( 'Insight news and reviews', 'customtheme' ),
        'labels'              => $labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'show_in_nav_menus'   => true,
        'show_in_admin_bar'   => true,
        'menu_position'       => 5,
        'can_export'          => true,
        'has_archive'         => true,
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'page',
        'show_in_rest'        => true,
         
        // This is where we add taxonomies to our CPT
        'taxonomies'          => array( 'category_insights' ),
    );     
    // Registering your Custom Post Type
    register_post_type( 'insights', $args ); 
}
add_action( 'init', 'custom_post_type_insights', 0 );

add_action( 'init', 'create_case_studies_hierarchical_taxonomy', 0 );
 
//create a custom taxonomy name it case_studies for your posts
 
function create_case_studies_hierarchical_taxonomy() {
 
  $labels = array(
    'name' => _x( 'Category Case Studies', 'taxonomy general name' ),
    'singular_name' => _x( 'Category Case Studies', 'taxonomy singular name' ),
    'search_items' =>  __( 'Search Case Studies' ),
    'all_items' => __( 'All Case Studies' ),
    'parent_item' => __( 'Parent Case Studies' ),
    'parent_item_colon' => __( 'Parent Case Studies:' ),
    'edit_item' => __( 'Edit Category Case Studies' ), 
    'update_item' => __( 'Update Category Case Studies' ),
    'add_new_item' => __( 'Add New Category Case Studies' ),
    'new_item_name' => __( 'New Case Studies Name' ),
    'menu_name' => __( 'Category Case Studies' ),
  );    
 
// Now register the taxonomy
  register_taxonomy('case_studies',array('case_studies'), array(
    'hierarchical' => true,
    'labels' => $labels,
    'show_ui' => true,
    'show_in_rest' => true,
    'show_admin_column' => true,
    'query_var' => true,
    'rewrite' => array( 'slug' => 'case_studies' ),
  ));
}


function custom_post_type_case_study() {
 
// Set UI labels for Custom Post Type Case Study
    $labels = array(
        'name'                => _x( 'Case Study', 'Post Type General Name', 'customtheme' ),
        'singular_name'       => _x( 'Case Study', 'Post Type Singular Name', 'customtheme' ),
        'menu_name'           => __( 'Case Study', 'customtheme' ),
        'parent_item_colon'   => __( 'Parent Case Study', 'customtheme' ),
        'all_items'           => __( 'All Case Study', 'customtheme' ),
        'view_item'           => __( 'View Case Study', 'customtheme' ),
        'add_new_item'        => __( 'Add New Case Study', 'customtheme' ),
        'add_new'             => __( 'Add New', 'customtheme' ),
        'edit_item'           => __( 'Edit Case Study', 'customtheme' ),
        'update_item'         => __( 'Update Case Study', 'customtheme' ),
        'search_items'        => __( 'Search Case Study', 'customtheme' ),
        'not_found'           => __( 'Not Found', 'customtheme' ),
        'not_found_in_trash'  => __( 'Not found in Trash', 'customtheme' ),
    );
     
// Set other options for Custom Post Type
     
    $args = array(
        'label'               => __( 'case_studies', 'customtheme' ),
        'description'         => __( 'Case Study news and reviews', 'customtheme' ),
        'labels'              => $labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'show_in_nav_menus'   => true,
        'show_in_admin_bar'   => true,
        'menu_position'       => 5,
        'can_export'          => true,
        'has_archive'         => true,
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'page',
        'show_in_rest'        => true,
         
        // This is where we add taxonomies to our CPT
        'taxonomies'          => array( 'case_studies' ),
    );
     
    // Registering your Custom Post Type
    register_post_type( 'case_studies', $args );
 
}
add_action( 'init', 'custom_post_type_case_study', 0 );



add_shortcode('custom_block_template', 'block_template_shortcode_query');
function block_template_shortcode_query($atts, $content){
  extract(shortcode_atts(array( // a few default values
   'posts_per_page' => '1',
   'post_type' => 'block_templates',
   'caller_get_posts' => 1)
   , $atts));

  global $post;
  $pid = $atts['p'];

  $posts = new WP_Query( array( 'post_type' => 'block_templates', 'posts_per_page' => '1','p' =>$pid ) );
  $output = '';
	global $wpdb;
    if ($posts->have_posts())
        while ($posts->have_posts()):
	$qry = "SELECT * FROM `tblpre_postmeta` WHERE `post_id` = $pid AND `meta_key` = '_wpb_shortcodes_custom_css'";
			$results = $wpdb->get_results($qry,OBJECT);	
			if (!empty($results))
			{
			$shortcodes_custom_css = strip_tags($results[0]->meta_value);
			echo '<style type="text/css" data-type="vc_shortcodes-custom-css">';
			echo $shortcodes_custom_css;
			echo '</style>';
			}
	
            $posts->the_post();
	       $out = the_content();
    endwhile;
  else
    return; // no posts found

  wp_reset_query();
  // return html_entity_decode($out);
  //return json_encode($post);
}


/* Block Templates */


function create_block_templates() {
 
    register_post_type( 'block_templates',
    // CPT Options
        array(
            'labels' => array(
                'name' => __( 'Block Templates' ),
                'singular_name' => __( 'Block Templates' )
            ),
            'public' => true,
            'has_archive' => true,
            'rewrite' => array('slug' => 'block_templates'),
            'show_in_rest' => true,
 
        )
    );
}
// Hooking up our function to theme setup
add_action( 'init', 'create_block_templates' );


function blocktemplate() { 
// Set UI labels for Custom Post Type
    $labels = array(
        'name'                => _x( 'Block Templates', 'Post Type General Name', 'customtheme' ),
        'singular_name'       => _x( 'Block Template', 'Post Type Singular Name', 'customtheme' ),
        'menu_name'           => __( 'Block Templates', 'customtheme' ),
        'parent_item_colon'   => __( 'Parent Block Template', 'customtheme' ),
        'all_items'           => __( 'All Block Templates', 'customtheme' ),
        'view_item'           => __( 'View Block Template', 'customtheme' ),
        'add_new_item'        => __( 'Add New Block Template', 'customtheme' ),
        'add_new'             => __( 'Add New', 'customtheme' ),
        'edit_item'           => __( 'Edit Block Template', 'customtheme' ),
        'update_item'         => __( 'Update Block Template', 'customtheme' ),
        'search_items'        => __( 'Search Block Template', 'customtheme' ),
        'not_found'           => __( 'Not Found', 'customtheme' ),
        'not_found_in_trash'  => __( 'Not found in Trash', 'customtheme' ),
    );
     
// Set other options for Custom Post Type
     
    $args = array(
        'label'               => __( 'block_templates', 'customtheme' ),
        'description'         => __( 'Block Template news and reviews', 'customtheme' ),
        'labels'              => $labels,
        // Features this CPT supports in Post Editor
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        // You can associate this CPT with a taxonomy or custom taxonomy. 
        'taxonomies'          => array( 'genres' ),
        /* A hierarchical CPT is like Pages and can have
        * Parent and child items. A non-hierarchical CPT
        * is like Posts.
        */ 
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'show_in_nav_menus'   => true,
        'show_in_admin_bar'   => true,
        'menu_position'       => 2,
        'can_export'          => true,
        'has_archive'         => true,
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'post',
        'show_in_rest' => true,
 
    );
     
    // Registering your Custom Post Type
    register_post_type( 'block_templates', $args );
}
 
add_action( 'init', 'blocktemplate', 0 );







function insight_shortcode() {
   ob_start();
     get_template_part('templates/insights-template');
   return ob_get_clean();   
} 
add_shortcode( 'insight_shortcode', 'insight_shortcode' );

function case_studies_shortcode() {
   ob_start();
     get_template_part('templates/case_studies-template');
   return ob_get_clean();   
} 
add_shortcode( 'case_studies_shortcode', 'case_studies_shortcode' );

function blog_shortcode() {
   ob_start();
     get_template_part('templates/blog-template');
   return ob_get_clean();   
} 
add_shortcode( 'blog_shortcode', 'blog_shortcode' );