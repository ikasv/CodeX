################################################################
		
		Gate::define('site_settings', function ($user) {
            return $user->role_id == 1 ? true : false;
        });
       
        Gate::define('permissions', function ($user, $module_code, $access_type) {

            foreach($user->permissions as $permission):
                if($permission->module_code == $module_code):
                    switch($access_type):
                            case 'create':
                                    return  $permission->rr_create == 1 ? true : false; 
                                break;

                            case 'edit':
                                    return  $permission->rr_edit == 1 ? true : false; 
                                break;

                            case 'view':
                                    return  $permission->rr_view == 1 ? true : false; 
                                break;

                            case 'delete':
                                    return  $permission->rr_delete == 1 ? true : false; 
                                break;
                            
                            default:
                                return false;
                                break;
                    endswitch;
                endif;
            endforeach;

            return false;

        });
		
		
######################################################### Blade

	@can('permissions', ['modules', 'view'])
		True
	@endcan
	
######################################################## Model
	
	protected $appends   = ['role_type', 'permissions'];

    public function getRoleTypeAttribute(){
        $role   =   Role::where('id', $this->role_id)->first();
        return $role->name;
    }

    public function getPermissionsAttribute(){
        return  Module::select('modules.module_name', 'modules.module_code',
                            'role_rights.rr_create', 'role_rights.rr_edit', 'role_rights.rr_delete', 'role_rights.rr_view',
                            'role_rights.role_id', 'role_rights.module_id')
                    ->join('role_rights', 'role_rights.module_id', '=', 'modules.id')  
                    ->where('role_rights.role_id', $this->role_id)              
                    ->distinct()
                ->get();
    }